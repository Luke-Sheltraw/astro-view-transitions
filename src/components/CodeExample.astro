---

interface Props {
  title?: string,
  code: string,
}

const { title = 'Example', code } = Astro.props;

---

<h3>{ title }</h3>
<code-example>
  <code>{ code }</code>
  <button>Copy</button>
</code-example>

<script>
  class CodeExample extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      const copyButtonEl = this.querySelector('button');
      copyButtonEl?.addEventListener('click', this._handleCopyButtonClick);
    }

    disconnectedCallback() {
      const copyButtonEl = this.querySelector('button');
      copyButtonEl?.removeEventListener('click', this._handleCopyButtonClick);
    }

    _handleCopyButtonClick = (e: Event) => {
      const codeContentEl = this.querySelector('code');

      const selection = window.getSelection();
      const range = document.createRange();

      if (!selection || !range || !codeContentEl) return;

      range.setStart(codeContentEl, 0);
      range.setEnd(codeContentEl, 1);

      codeContentEl.focus();
      selection.removeAllRanges();
      selection.addRange(range);
    }
  }

  customElements.define('code-example', CodeExample);
</script>

<style>
  code-example {
    display: block;
    position: relative;
  }

  h3 {
    margin: 1rem 0 0.5rem 0;
  }

  code {
    white-space: pre;
    border: 1px solid gray;
    border-radius: 0.5rem;
    padding: 1rem;
    display: block;
  }

  button {
    position: absolute;
    top: 0.5rem;
    right: 0.5rem;
    border: none;
    background: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    font-size: 0.875rem;
  }

  button:hover {
    text-decoration: underline;
  }

  button::before {
    content: "";
    width: 1rem;
    height: 1rem;
    display: block;
    background-image: url('/icons/content_copy.svg');
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
    margin-right: 0.25rem;
  }
</style>